version: '3.7'
services:

  db:
    image: postgres:13-alpine
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: wtw
      POSTGRES_PASSWORD: wtw
      POSTGRES_DB: wtw
    volumes:
      - storage_db:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
    - backend

  api:
    build:
      context: .
      dockerfile: apps/api/Dockerfile
    environment:
      DB_HOST: db
      DB_USERNAME: wtw
      DB_PASSWORD: wtw
      DB_DATABASE: wtw
      MOVIEDB_API_KEY: ${MOVIEDB_API_KEY}
    networks:
    - traefik-net
    - backend
    expose:
      - 3000
    labels:
    - "traefik.enable=true"
    - "traefik.http.routers.api-wtw.rule=Host(`api.wtw.localhost`)"
    depends_on:
    - db
    - redis

  web:
    build:
      context: .
      dockerfile: apps/web/Dockerfile
    expose:
      - 80
    networks:
    - traefik-net
    labels:
    - "traefik.enable=true"
    - "traefik.http.routers.wtw.rule=Host(`wtw.localhost`)"
    environment:
      REACT_APP_API_BASE_URL: http://api.wtw.localhost

  redis:
    image: redis
    ports:
    - "6379:6379"
    volumes:
    - "redis_data:/data" # Pas besoin d'ajouter d'argument Ã  la command
    networks:
    - backend

  exporter:
    image: quay.io/prometheuscommunity/postgres-exporter
    environment:
      DATA_SOURCE_NAME: "postgresql://wtw:wtw@db:5432/wtw?sslmode=disable"
      PG_EXPORTER_INCLUDE_DATABASES: "wtw"
    networks:
      - backend
      - metrics
    ports:
    - "9187:9187"


volumes:
  storage_db:
  redis_data:

networks:
  backend:
    external: true
  traefik-net:
    external: true
  metrics:
    external: true
