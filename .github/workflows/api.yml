name: api

on:
  push:
    branches:
      - '**'
    tags:
      - 'v*'
  pull_request:


jobs:
  lint:
    # runs-on: self-hosted
    runs-on: ubuntu-latest
    # if: ${{ !env.ACT }}
    steps:
      -
        name: Checkout
        uses: actions/checkout@v2
        with:
          # Full git history is needed to get a proper list of changed files within `super-linter`
          fetch-depth: 0
      -
        name: Run linter
        uses: github/super-linter@v3
        env:
          # VALIDATE_ALL_CODEBASE: false
          # VALIDATE_TYPESCRIPT_ES: false
          # VALIDATE_TSX: false
          # TYPESCRIPT_ES_CONFIG_FILE: .eslintrc.json
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          # ACTIONS_RUNNER_DEBUG: false
          DEFAULT_WORKSPACE: apps/api
          JAVASCRIPT_DEFAULT_STYLE: prettier
          VALIDATE_JAVASCRIPT_STANDARD: false
          VALIDATE_TYPESCRIPT_STANDARD: false
          DEFAULT_BRANCH: main
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node_version:
          - 12
          - 14
        architecture:
          - x64
    name: Node ${{ matrix.node_version }} - ${{ matrix.architecture }}
    steps:
      -
        name: Checkout
        uses: actions/checkout@v2
      -
        name: Setup node
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node_version }}
          architecture: ${{ matrix.architecture }}
      -
        name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"
      -
        uses: actions/cache@v2
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}
      -
        name: Install dependencies
        run: yarn install
      -
        name: Run Docker-Compose
        run: docker-compose up -d db redis
      -
        name: Run Unit Test
        run: yarn workspace api test

      - name: Run End to End test
        run: yarn workspace api test:e2e
        env:
          DB_HOST: 127.0.0.1
          DB_PORT: 5432
          DB_USERNAME: wtw
          DB_PASSWORD: wtw
          DB_DATABASE: wtw
          MOVIEDB_API_KEY: ${{ secrets.MOVIEDB_API_KEY }}

  build:
    # runs-on: self-hosted
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout
        uses: actions/checkout@v2
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      -
        name: Login to Gitlab
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v1
        with:
          registry: registry.gitlab.com
          username: ${{ secrets.CI_REGISTRY_USER }}
          password: ${{ secrets.CI_REGISTRY_PASSWORD }}
      -
        name: Docker meta
        id: docker_meta
        uses: crazy-max/ghaction-docker-meta@v1
        with:
          images: registry.gitlab.com/nevax/wtw/wtw-api # list of Docker images to use as base name for tags
          tag-semver: |
            {{version}}
            {{major}}.{{minor}}
      -
        name: Build and push base
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./apps/api/Dockerfile
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.docker_meta.outputs.tags }}
          labels: ${{ steps.docker_meta.outputs.labels }}
          cache-from: type=registry,ref=registry.gitlab.com/nevax/wtw/wtw-web:latest
          cache-to: type=inline
